@*  @using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager *@ 

@using Cool_Co_Fridge_Management.Models

@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@* @inject Microsoft.AspNetCore.Identity.UserManager<Cool_Co_Fridge_Management.Models.Users> UserManger *@
@{
    var username = HttpContextAccessor.HttpContext.Session.GetString("UserName");
    var userRole = HttpContextAccessor.HttpContext.Session.GetString("UserRole");
}
<ul class="navbar-nav">
@if (!string.IsNullOrEmpty(username))
{
    <li class="nav-item">
        <a  class="nav-link text-dark" asp-area="" asp-controller="Account" asp-action="Manage" title="Manage">Hello @username!</a>
    </li>
    <li class="nav-item">
        <form  class="form-inline" asp-controller="Account" asp-action="Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
        <li class="nav-item">
            <a class="btn-get-started" asp-controller="Home" asp-action="@((userRole == "Admin" || userRole == "Employee") ? "EmployeeLanding" : "Index")">
                Employee Landing
            </a>
        </li>
}
else
{
    @* <li class="nav-item">
        <a class="btn-get-started" asp-controller="Account" asp-action="Register">Register</a>
    </li>
    <br /> *@
    <li class="nav-item">
        <a class="btn-get-started" asp-controller="Account" asp-action="NewLogin">Login</a>
    </li>
}
</ul>

@* <a class="btn-get-started" asp-area="Identity" asp-page="/Account/Register">Register</a> *@

@* <a class="btn-get-started" asp-area="Identity" asp-page="/Account/Login">Login</a>
 *@

