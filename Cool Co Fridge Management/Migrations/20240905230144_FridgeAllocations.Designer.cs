// <auto-generated />
using System;
using Cool_Co_Fridge_Management.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cool_Co_Fridge_Management.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240905230144_FridgeAllocations")]
    partial class FridgeAllocations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cool_Co_Fridge_Management.Models.FaultType", b =>
                {
                    b.Property<int>("FaultTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FaultTypeID"));

                    b.Property<string>("FaultTypeDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FaultTypeID");

                    b.ToTable("faultTypes");
                });

            modelBuilder.Entity("Cool_Co_Fridge_Management.Models.FridgeAllocations", b =>
                {
                    b.Property<int>("FridgeAllocationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FridgeAllocationID"));

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<int>("FridgeID")
                        .HasColumnType("int");

                    b.Property<string>("FridgeRequestID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FridgeAllocationID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("FridgeID");

                    b.ToTable("FridgeAllocations");
                });

            modelBuilder.Entity("Cool_Co_Fridge_Management.Models.FridgeFault", b =>
                {
                    b.Property<int>("FridgeFaultID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FridgeFaultID"));

                    b.Property<int>("FaultTypeID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReportedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatusID")
                        .HasColumnType("int");

                    b.HasKey("FridgeFaultID");

                    b.HasIndex("FaultTypeID");

                    b.HasIndex("StatusID");

                    b.ToTable("fridgeFaults");
                });

            modelBuilder.Entity("Cool_Co_Fridge_Management.Models.FridgeRequests", b =>
                {
                    b.Property<int>("FridgeRequestID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FridgeRequestID"));

                    b.Property<int>("FridgeTypeID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FridgeRequestID");

                    b.HasIndex("FridgeTypeID");

                    b.ToTable("FridgeRequests");
                });

            modelBuilder.Entity("Cool_Co_Fridge_Management.Models.Fridge_Stock", b =>
                {
                    b.Property<int>("StockID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockID"));

                    b.Property<bool>("Availability")
                        .HasColumnType("bit");

                    b.Property<int>("FridgeTypeID")
                        .HasColumnType("int");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("StockID");

                    b.HasIndex("FridgeTypeID");

                    b.ToTable("stock");
                });

            modelBuilder.Entity("Cool_Co_Fridge_Management.Models.Fridge_Type", b =>
                {
                    b.Property<int>("FridgeTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FridgeTypeID"));

                    b.Property<bool>("Availablity")
                        .HasColumnType("bit");

                    b.Property<string>("FridgeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SupplierID")
                        .HasColumnType("int");

                    b.HasKey("FridgeTypeID");

                    b.HasIndex("SupplierID");

                    b.ToTable("fridge_type");

                    b.HasData(
                        new
                        {
                            FridgeTypeID = 1,
                            Availablity = true,
                            FridgeType = "Chest Freezer",
                            SupplierID = 789
                        },
                        new
                        {
                            FridgeTypeID = 2,
                            Availablity = true,
                            FridgeType = "Drawer Fridge",
                            SupplierID = 456
                        },
                        new
                        {
                            FridgeTypeID = 3,
                            Availablity = true,
                            FridgeType = "Commercial Fridge",
                            SupplierID = 123
                        },
                        new
                        {
                            FridgeTypeID = 4,
                            Availablity = true,
                            FridgeType = "Mini Fridge",
                            SupplierID = 101
                        },
                        new
                        {
                            FridgeTypeID = 5,
                            Availablity = true,
                            FridgeType = "French Door Fridge",
                            SupplierID = 112
                        });
                });

            modelBuilder.Entity("Cool_Co_Fridge_Management.Models.FridgesAvailable", b =>
                {
                    b.Property<int>("FridgeToAllocatedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FridgeToAllocatedId"));

                    b.Property<int>("FridgeTypeID")
                        .HasColumnType("int");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StockID")
                        .HasColumnType("int");

                    b.HasKey("FridgeToAllocatedId");

                    b.HasIndex("FridgeTypeID");

                    b.ToTable("FridgesAvailable");
                });

            modelBuilder.Entity("Cool_Co_Fridge_Management.Models.MaintenanceBooking", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("MaintenanceBooking");
                });

            modelBuilder.Entity("Cool_Co_Fridge_Management.Models.RFQuotation", b =>
                {
                    b.Property<int>("RFQID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RFQID"));

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ItemDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PrinceRange")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("RFQID");

                    b.HasIndex("SupplierId");

                    b.ToTable("RFQuotation");
                });

            modelBuilder.Entity("Cool_Co_Fridge_Management.Models.Roles", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleID"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleID");

                    b.ToTable("roles");

                    b.HasData(
                        new
                        {
                            RoleID = 1,
                            RoleName = "Customer"
                        },
                        new
                        {
                            RoleID = 2,
                            RoleName = "Fault Technician"
                        },
                        new
                        {
                            RoleID = 3,
                            RoleName = "Maintenance Technician"
                        },
                        new
                        {
                            RoleID = 4,
                            RoleName = "Stock Controller"
                        },
                        new
                        {
                            RoleID = 5,
                            RoleName = "Customer Service"
                        },
                        new
                        {
                            RoleID = 6,
                            RoleName = "Purchasing Manager"
                        },
                        new
                        {
                            RoleID = 7,
                            RoleName = "Administrator"
                        });
                });

            modelBuilder.Entity("Cool_Co_Fridge_Management.Models.Status", b =>
                {
                    b.Property<int>("StatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusID"));

                    b.Property<string>("StatusDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StatusID");

                    b.ToTable("statuses");
                });

            modelBuilder.Entity("Cool_Co_Fridge_Management.Models.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierId"));

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SupplierId");

                    b.ToTable("suppliers");

                    b.HasData(
                        new
                        {
                            SupplierId = 789,
                            ContactNumber = "0860884402",
                            Email = "service@kic.co.za",
                            SupplierName = "KIC South Africa"
                        },
                        new
                        {
                            SupplierId = 456,
                            ContactNumber = "0317926900",
                            Email = "ayakhac16@gmail.com",
                            SupplierName = "Just Refrigeration"
                        },
                        new
                        {
                            SupplierId = 123,
                            ContactNumber = "0861113804",
                            Email = "stedon@maxicoolsa.co.za",
                            SupplierName = "Maxi-Cool S.A"
                        },
                        new
                        {
                            SupplierId = 101,
                            ContactNumber = "0102071600",
                            Email = "enquiries@zeroappliances.co.za",
                            SupplierName = "Zero Appliances"
                        },
                        new
                        {
                            SupplierId = 112,
                            ContactNumber = "0823422002",
                            Email = "sales@minty.co.za",
                            SupplierName = "Mintys Factory Shop"
                        });
                });

            modelBuilder.Entity("Cool_Co_Fridge_Management.Models.Users", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.HasIndex("RoleId");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("Cool_Co_Fridge_Management.Models.FridgeAllocations", b =>
                {
                    b.HasOne("Cool_Co_Fridge_Management.Models.Users", "Users")
                        .WithMany()
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cool_Co_Fridge_Management.Models.Fridge_Stock", "Fridge_Stock")
                        .WithMany()
                        .HasForeignKey("FridgeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fridge_Stock");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Cool_Co_Fridge_Management.Models.FridgeFault", b =>
                {
                    b.HasOne("Cool_Co_Fridge_Management.Models.FaultType", "faultType")
                        .WithMany()
                        .HasForeignKey("FaultTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cool_Co_Fridge_Management.Models.Status", "status")
                        .WithMany()
                        .HasForeignKey("StatusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("faultType");

                    b.Navigation("status");
                });

            modelBuilder.Entity("Cool_Co_Fridge_Management.Models.FridgeRequests", b =>
                {
                    b.HasOne("Cool_Co_Fridge_Management.Models.Fridge_Type", "Fridge_Type")
                        .WithMany()
                        .HasForeignKey("FridgeTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cool_Co_Fridge_Management.Models.Users", "Email")
                        .WithMany()
                        .HasForeignKey("FridgeTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Email");

                    b.Navigation("Fridge_Type");
                });

            modelBuilder.Entity("Cool_Co_Fridge_Management.Models.Fridge_Stock", b =>
                {
                    b.HasOne("Cool_Co_Fridge_Management.Models.Fridge_Type", "Fridge_Type")
                        .WithMany()
                        .HasForeignKey("FridgeTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fridge_Type");
                });

            modelBuilder.Entity("Cool_Co_Fridge_Management.Models.Fridge_Type", b =>
                {
                    b.HasOne("Cool_Co_Fridge_Management.Models.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Cool_Co_Fridge_Management.Models.FridgesAvailable", b =>
                {
                    b.HasOne("Cool_Co_Fridge_Management.Models.Fridge_Type", "Fridge_Type")
                        .WithMany()
                        .HasForeignKey("FridgeTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fridge_Type");
                });

            modelBuilder.Entity("Cool_Co_Fridge_Management.Models.RFQuotation", b =>
                {
                    b.HasOne("Cool_Co_Fridge_Management.Models.Supplier", "Supplier")
                        .WithMany("Quotations")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Cool_Co_Fridge_Management.Models.Users", b =>
                {
                    b.HasOne("Cool_Co_Fridge_Management.Models.Roles", "Roles")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("Cool_Co_Fridge_Management.Models.Roles", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Cool_Co_Fridge_Management.Models.Supplier", b =>
                {
                    b.Navigation("Quotations");
                });
#pragma warning restore 612, 618
        }
    }
}
